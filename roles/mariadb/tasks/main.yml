---
- name: get database binding
  shell: get secrets -n {{ namespace }} -l mynamespace -o json
  register: bindingout



- name: set database facts
  set_fact:
    DB_HOST: "{{ bindingout.stdout | from_json ['DB_HOST'] | b64decode }}"
    DB_USER: "{{ bindingout.stdout | from_json ['DB_USER'] | b64decode }}"
    DB_PASSWORD: "{{ bindingout.stdout | from_json ['DB_PASSWORD'] | b64decode }}"
    DB_NAME: "{{ bindingout.stdout | from_json ['DB_NAME'] | b64decode }}"
    DB_PORT: "{{ bindingout.stdout | from_json ['DB_PORT'] | b64decode }}"



- name: Install MariaDB
  apt:
    name: mariadb-server
    state: present
    force: yes

- hosts: localhost
  gather_facts: false
  vars:
    test: 1
  tasks:
  - name: clone ELK repo
    git:
      repo: https://github.com/elastic/helm-charts.git
      dest: ~/elk/repo
      update: yes
      
  - name: Install MariaDB
    apt:
      name: mariadb-server
      state: present
      force: yes
  
  
  
  - name: "Download chart \"{{ chart.name }}\""
    git:
      repo: "{{ chart.git_repo }}"
      dest: "{{ chart_path }}"
    when: chart.state == 'present' and chart.git_repo is defined
    changed_when: false
  
  

  - name: install kibana
    shell: |
      #!/bin/bash
      helm upgrade --install kibana ~/elk/repo/kibana -f ../elkvalues/kibana.yaml
  
  - name: filebeat installation
    shell: |
      #!/bin/bash
      helm upgrade --install filebeat ~/elk/repo/filebeat -f ../elkvalues/filebeat.yaml
  

  - name: wait kibana be ready
    shell: |
      #!/bin/bash
      kubectl get pods -l app=kibana | grep Running | grep -c '1/1'
    register: kibana_ready
    delay: 10
    retries: 20
    until: kibana_ready.stdout|int == 1
  
  - name: wait kibana service load balancer be ready
    shell: |
      #!/bin/bash
      kubectl get service kibana-kibana | grep -c 'amazonaws.com'
    register: kibana_service
    delay: 10
    retries: 20
    until: kibana_service.stdout|int == 1
  
  - name: deploy logs application
    shell: |
      #!/bin/bash
      kubectl apply -f ../application/deployment.yaml




    
    
    
    
    